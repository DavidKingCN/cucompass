package com.gcx.citygovcreditndrc.controller.personInfo;

import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.gcx.citygovcreditndrc.model.MyResult;
import com.gcx.citygovcreditndrc.model.ResponseData;
import com.gcx.citygovcreditndrc.model.ServiceResult;
import com.gcx.citygovcreditndrc.model.User;
import com.gcx.citygovcreditndrc.model.evaluationrecord.Evaluationrecord;
import com.gcx.citygovcreditndrc.model.personInfo.PersonInfoInput;
import com.gcx.citygovcreditndrc.service.impl.CommonImpl;
import com.gcx.citygovcreditndrc.service.personInfo.PersonInfoInputService;

@Controller
@RequestMapping("/personInfoInput")
public class PersonInfoInputController {
	
	@Resource
	CommonImpl commonImpl;
	
	@Resource
	PersonInfoInputService personInfoInputService;
	
	@ResponseBody
	@RequestMapping("/findByConditions")
	private MyResult<Object> findByConditions(HttpServletRequest request,HttpServletResponse response,PersonInfoInput personInfoInput,int pagenow,int pagesize){
		String userId=commonImpl.getUserId(request, response);
		if(!"".equals(userId) || userId != null){
			personInfoInput.setInputUser(userId);
		}
		MyResult<Object> result=personInfoInputService.findById(personInfoInput, pagenow, pagesize);
		return result;
		
	}
	
	@ResponseBody
	//@RequestMapping("/insertByConditions")
	@RequestMapping(value="/insertByConditions",method=RequestMethod.POST)
	public MyResult<Object> insertByConditions( HttpServletRequest request,HttpServletResponse response, @RequestBody PersonInfoInput personInfoInput){
		String userId=commonImpl.getUserId(request, response);
		String userName=commonImpl.getUserName(request, response);
		personInfoInput.setInputUser(userId);
		personInfoInput.setR1(userName);
		personInfoInput.setInputTime(new Date());
		//String id=personInfoInput.getId().toString();
		if("".equals(personInfoInput.getId()) || personInfoInput.getId() == null){
			personInfoInput.setState("未提交");
		}/*else {
			personInfoInput.setState("审核中");
		}*/
		MyResult<Object> result=personInfoInputService.insert(personInfoInput);
		return result;
	}
	
	@ResponseBody
	@RequestMapping("/updateByConditions")
	public MyResult<Object> updateByConditions(HttpServletRequest request,HttpServletResponse response,PersonInfoInput personInfoInput){
		MyResult<Object> result=personInfoInputService.updateById(personInfoInput);
		return result;
	}
	
	@ResponseBody
	@RequestMapping("/findUserId")
	public MyResult<Object> findUserId(HttpServletRequest request,HttpServletResponse response){
		MyResult<Object> result=new MyResult<Object>();
		User user=commonImpl.getUser(request, response);
		result.setData(user);
		result.setMsg("操作成功");
		result.setStatus(200);
		return result;
	} 
	
	@ResponseBody
	@RequestMapping(value="/delete",method=RequestMethod.GET)
	public ResponseData delRecords(PersonInfoInput record){
		MyResult<Object> result = personInfoInputService.delRecord(record.getId());
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;
	}
	

}
