package com.gcx.citygovcreditndrc.controller.common;
import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.gcx.citygovcreditndrc.model.ResponseData;
import com.gcx.citygovcreditndrc.model.ServiceResult;
import com.gcx.citygovcreditndrc.model.common.Enclosure;
import com.gcx.citygovcreditndrc.model.common.EnclosureAo;
import com.gcx.citygovcreditndrc.service.common.EnclosureService;
@SuppressWarnings("all")
@Controller
@RequestMapping("/enclosure")
public class EnclosureController {
	@Resource
	EnclosureService enclosureService;

/*	@RequestMapping(value="/page/{pagenow}/{pagesize}",method=RequestMethod.POST)
	@ResponseBody
	public ResponseData findRecords(@RequestBody String record,@PathVariable("pagenow") int pagenow,@PathVariable("pagesize") int pagesize){
		Enclosure recordObj = new Enclosure();
		if(record!=null && !record.equals("")){
			recordObj  = JSON.parseObject(record, Enclosure.class);
		}
		ServiceResult<Object> result = enclosureService.findRecords(recordObj, pagenow, pagesize);
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;
	}
	
	*/
	
	
	@RequestMapping(value="/pageQuery",method=RequestMethod.GET)
	@ResponseBody
	public ResponseData findRecords(EnclosureAo  record){
		ServiceResult<Object> result = enclosureService.findRecords(record, record.getPagenow(), record.getPagesize());
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;
	}
	
	
	
	
	
	//保存的方法
	@ResponseBody
	@RequestMapping(value="/add",method=RequestMethod.POST)
	public ResponseData addRecord(@RequestBody Enclosure record){
		ServiceResult result =enclosureService.addRecord(record);
		
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;

	}
	
	@ResponseBody
	@RequestMapping(value="/{id}/del",method=RequestMethod.GET)
	public ResponseData delRecord(@PathVariable("id") Integer record){
		ServiceResult<Object> result = enclosureService.delRecord(record);
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;
	}
	
	@ResponseBody
	@RequestMapping(value="/update",method=RequestMethod.POST)
	public ResponseData updateRecord(@RequestBody Enclosure record){
		ServiceResult<Object> result = enclosureService.updateRecord(record);
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;
	}
	@ResponseBody
	@RequestMapping(value="/saveOrUpdate",method=RequestMethod.POST)
	public ResponseData saveOrUpdate(@RequestBody Enclosure record){
		Integer id = record.getId();
		ServiceResult<Object> result = null;
		ResponseData responseData = ResponseData.ok();
		if(id == null){//新增
			result =enclosureService.addRecord(record);
			responseData.putDataValue("insert", "success");
		}else{	//修改
			result = enclosureService.updateRecord(record);
			responseData.putDataValue("update", "success");
		}
		
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;
	}
}
