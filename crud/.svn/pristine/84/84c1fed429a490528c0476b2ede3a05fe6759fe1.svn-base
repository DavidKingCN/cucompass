package com.gcx.citygovcreditndrc.controller.applyCommentRecord;
import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.gcx.citygovcreditndrc.model.ResponseData;
import com.gcx.citygovcreditndrc.model.ServiceResult;
import com.gcx.citygovcreditndrc.model.applyCommentRecord.ApplyCommentRecord;
import com.gcx.citygovcreditndrc.model.applyCommentRecord.ApplyCommentRecordAo;
import com.gcx.citygovcreditndrc.service.applyCommentRecord.ApplyCommentRecordService;
import com.gcx.citygovcreditndrc.service.impl.CommonImpl;
import com.mysql.fabric.xmlrpc.base.Array;
@SuppressWarnings("all")
@Controller
@RequestMapping("/applyCommentRecord")
public class ApplyCommentRecordController {
	@Resource
	ApplyCommentRecordService applyCommentRecordService;

	@Resource
	CommonImpl commonImpl;

	



/*	@RequestMapping(value="/page/{pagenow}/{pagesize}",method=RequestMethod.POST)
	@ResponseBody
	public ResponseData findRecords(@RequestBody String record,@PathVariable("pagenow") int pagenow,@PathVariable("pagesize") int pagesize){
		ApplyCommentRecord recordObj = new ApplyCommentRecord();
		if(record!=null && !record.equals("")){
			recordObj  = JSON.parseObject(record, ApplyCommentRecord.class);
		}
		ServiceResult<Object> result = applyCommentRecordService.findRecords(recordObj, pagenow, pagesize);
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;
	}
	*/
	
	@RequestMapping(value="/page",method=RequestMethod.GET)
	@ResponseBody
	public ResponseData findRecords(HttpServletRequest request,HttpServletResponse response, ApplyCommentRecordAo record){

  		String userId=commonImpl.getUserId(request, response);
		if(!"".equals(userId) || userId != null){
			record.setOperator(userId);
		}
		ServiceResult<Object> result = applyCommentRecordService.findRecords(request,response,record,record.getPagenow(),record.getPagesize());
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		if(result.getTotal() !=null ){
			responseData.putDataValue("total", result.getTotal());
		}
		return responseData;
	}
	
	
	//保存的方法
	@ResponseBody
	@RequestMapping(value="/add",method=RequestMethod.POST)
	public ResponseData addRecord(@RequestBody ApplyCommentRecord record){
		ServiceResult result=null;
			 result =applyCommentRecordService.addRecord(record);
	
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;

	}
	
	//根据id进行查询
		@ResponseBody
		@RequestMapping(value="/findById",method=RequestMethod.GET)
		public ResponseData findById(ApplyCommentRecord record){
			ServiceResult<Object> result = applyCommentRecordService.findById(record.getId());
			ResponseData responseData = ResponseData.ok();
			if(result.getData() !=null){
				responseData.putDataValue("result", result.getData());
			}
			return responseData;
		}
		
	
	@ResponseBody
	@RequestMapping(value="/{id}/del",method=RequestMethod.GET)
	public ResponseData delRecord(@PathVariable("id") Integer record){
		ServiceResult<Object> result = applyCommentRecordService.delRecord(record);
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;
	}
	
	@ResponseBody
	@RequestMapping(value="/update",method=RequestMethod.POST)
	public ResponseData updateRecord(@RequestBody ApplyCommentRecord record){
		ServiceResult<Object> result = applyCommentRecordService.updateRecord(record);
		ResponseData responseData = ResponseData.ok();
		if(result.getData() !=null){
			responseData.putDataValue("result", result.getData());
		}
		return responseData;
	}
	

	
}
